
@implements IDisposable
@if(AllState.ShowUser)
{
    <div class="container mt-5">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <AlertComponent/>
                    <div class="card-header">
                        
                        <UserModal  user="user"  OnLoadingNewUsers="LoadNewUsers" />
                    </div>
                    <div class="card-header">
                        <div class="card-body">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th scope="col">Number</th>
                                        <th scope="col">Name</th>
                                        <th scope="col">Email </th>
                                        <th scope="col">Role </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @if(users is not null)
                                    {

                                        int count = 1;
                                        foreach(var item in users)
                                        {
                                            <tr>
                                                <th scope="row">@count</th>
                                                <td>@item.Name</td>
                                                <td>@item.Email</td>
                                                <td>@item.Role</td>
                                                <td>
                                                    <i class="bi bi-pencil text-info" id="cursorStyle" @onclick="()=>EditClicked(item)" data-bs-toggle="modal" data-bs-target="#exampleModal"></i>
                                                    <i class="bi bi-trash text-danger" id="cursorStyle" @onclick="()=>DeleteClicked(item)"></i>

                                                </td>
                                            </tr>
                                            count++;
                                        }

                                    }
                                    else
                                    {
                                     <tr>
                                         <td colspan="4">
                                             <div class="alert alert-info text-center">
                                                 No General Users added yet!
                                             </div>
                                         </td>
                                     </tr>   
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@code {

    public List<ManageUser> users { get; set; } = new();
    public ManageUser user { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
           await GetUsers();

        AllState.Action += StateHasChanged;
    }
    private async Task GetUsers()
    {
        users = await accountService.GetUsers();
    }
    public void Dispose()
    {
        AllState.Action -= StateHasChanged;
    }
    private void EditClicked(ManageUser _user)
    {
        user=_user;

    }
    private async Task DeleteClicked(ManageUser user)
    {
        var response = await accountService.DeleteUser(user.UserId);
          AllState.TriggerAlert(true,"User Deleted Successfully");
        await GetUsers();
     
    }
    void LoadNewUsers(List<ManageUser> _Users)
    {
        users = _Users;
    }
    private void ResetAll()
    {
        // Close the alert by rerendring with null
        AllState.TriggerAlert(null, "");
        user = new();
    
    }
}
